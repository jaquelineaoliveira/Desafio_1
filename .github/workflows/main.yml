# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Testes

#Gatilhos --> É o que irá disparar a execução dos testes. Pode ser programado (em determinado horário) ou acionados (sempre que um evento acontecer).
# Abaixo está configurado pelo acionanmento, sempre que ocorrer um push 
on:
  push:
    branches: [ main ]
 
jobs:
  build:

# Define qual máquina ou ambiente o teste será executado. Esta máquina virtual é do git e vamos falar qual máquina queremos executar o teste e o ambiente
    runs-on: ubuntu-latest
    
# Passos para preparar máquina e ambiente para executar os testes. A máquina é zerada, por isso precisamos falar o que esperamos dela. 
    steps:
    
     # Ação que vai baixar nosso código para esta máquina
    - uses: actions/checkout@v2
    
    #Setup da versão do node
    # informar a versão do node que queremos que ela execute. Vai ser 14 e qlqr número depois dela. Geralmente ele pega a mais recente
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 14.x 

# Informar os comandos que executaríamos se tivessemos baixado o  projeto em nossa máquina. 

    - run: npm install # Ele vai instalar todos os pacotes que estiverem em package.json 
    - run: npx cypress run # Ou pode ser o comando que criamos tipo: npm run cy:run 
      continue-on-error: true # Para o teste rodar mesmo que uma spec falhe. 
      #Geração do relatório
    - run: npm run report:merge # Comando de mescla de arquivos
    - run: npm run report:mocha  # Comando de gerar o relatório com todos os arquivos mesclados

 # Publicar o nosso relatório como uma página web HTML. Recurso chamado GitHub Pages. Isso permite que outras pessoas vejam o relatório. 
  
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@4.1.7
      with: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token que o git terá gerado automaticamente
        BRANCH: gh-pages # Qual branch que queremos que seja publicada no git. Vamos criar nova branch para publicar os relatórios 
        FOLDER: mochawesome-report #Arquivo ou pasta queremos levar para nova branch
        
